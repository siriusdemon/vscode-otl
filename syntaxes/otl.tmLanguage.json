{
  "scopeName": "source.otl",
  "name": "OTL",
  "patterns": [
    {
      "match": "\\b(if|else|elseif|return|while|for|foreach|do|mutex|parallel|lane|break|continue|try|catch|finally|throw|private|public|package|terminateLanes|import|as)\\b",
      "name": "keyword.control.otl"
    },
    {
      "match": "\\b(Integer|Float|Boolean|String|Map|List|ByteField|Exception|procedure|true|false|constant|variable|validity|context)\\b",
      "name": "storage.type.otl"
    },
    {
    "name": "support.type.exception.otl",
    "match": "\\b\\w*Exception\\b"
    },
    {
      "name": "support.type.otl",
      "match": "\\b(Json|ComChannel|DiagService|Result|ParameterContainer|Parameter|Message|Response|Request|ResultState|ResponseState|Event|EventSource|FlashJob|FlashSession|FlashFileFormat|Audience|Screen|MessageType|ConfirmationType|TranslationKey|LogLevel|SeverityLevel|Measurement|Quantity|Unit|Encoding\\d*)\\b"
    },
    {
      "match": "\".*?\"",
      "name": "string.quoted.double.otl"
    },
    {
      "match": "//.*$",
      "name": "comment.line.double-slash.otl"
    },
    {
      "begin": "/\\*",
      "end": "\\*/",
      "name": "comment.block.otl"
    },
    {
      "name": "constant.numeric.otl",
      "match": "\\b(0x[0-9a-fA-F]+|\\d+\\.\\d+|\\d+)\\b"
    },
    {
      "name": "constant.numeric.otl",
      "match": "\\b(in|out|inout)\\b"
    },
    {
    "name": "entity.name.function.user.otl",
    "match": "(?<=\\bprocedure\\s+)\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
    },
    {
    "name": "entity.name.function.call.otl",
    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*\\()"
    },
    {
      "name": "support.type.otl",
      "match": "\\b([A-Za-z_][A-Za-z0-9_]*):([A-Za-z_][A-Za-z0-9_]*)\\b"
    },
    {
    "name": "variable.other.otl",
    "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
    }
  ]
}
